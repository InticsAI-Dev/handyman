package in.handyman.raven.lib;

import in.handyman.raven.lambda.action.ActionExecution;
import in.handyman.raven.lambda.action.IActionExecution;
import in.handyman.raven.lambda.doa.audit.ActionExecutionAudit;
import in.handyman.raven.lib.model.FileSize;

import java.io.File;
import java.lang.Exception;
import java.lang.Object;
import java.lang.Override;
import org.slf4j.Logger;
import org.slf4j.Marker;
import org.slf4j.MarkerFactory;

/**
 * Auto Generated By Raven
 */
@ActionExecution(
    actionName = "FileSize"
)
public class FileSizeAction implements IActionExecution {
  private final ActionExecutionAudit action;

  private final Logger log;

  private final FileSize fileSize;

  private final Marker aMarker;

  public FileSizeAction(final ActionExecutionAudit action, final Logger log,
      final Object fileSize) {
    this.fileSize = (FileSize) fileSize;
    this.action = action;
    this.log = log;
    this.aMarker = MarkerFactory.getMarker(" FileSize:"+this.fileSize.getName());
  }

  @Override
  public void execute() throws Exception {
    String fileName = fileSize.getFileName();
    String filePath = fileSize.getFilePath();
    String fullyGeneratedFilePath = filePath + "/" + fileName;

    File f = new File(fullyGeneratedFilePath);
    long size = f.length();
    log.info("The file size is " + size);
  }

  @Override
  public boolean executeIf() throws Exception {
    return fileSize.getCondition();
  }
}
