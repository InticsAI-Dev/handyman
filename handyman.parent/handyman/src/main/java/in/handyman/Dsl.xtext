grammar in.handyman.Dsl with org.eclipse.xtext.common.Terminals

generate dsl "http://www.handyman.in/Dsl"

Process:
	'process' name=STRING
	'{'
	try=Try
	catch=Catch
	finally=Finally
	'}';

Try:
	'try' 
	'{'
	(action+=Action)*
	'}';

Finally:
	'finally' 
	'{'
	(action+=Action)*
	'}';

Catch:
	'catch'
	'{'
	(action+=Action)*
	'}';

Action:
	(Copydata
	| LoadCsv
	| WriteCsv
	| Transform
	| Callprocess
	| Fetch
	| Doozle
	| Dropfile
	| Abort
	| ExecJava
	| DeleteFolder
	| Terminal
	| SendEMail
	);
	
SendEMail:
	'sendemail' 'as' name=STRING 'db' source=STRING 'smtp-host' smtphost=STRING 'smtp-port' smtpport=STRING 
	'from' from=STRING 'pass' pass=STRING 'to' to=STRING 'cc' cc=STRING
	'bcc' bcc=STRING 'subject' subject=STRING 'body' body=STRING 'signature' signature=STRING 'using'
	'{'
	value=SelectStatement
	'}' 'on-condition' condition=Expression;

DeleteFolder:
	'deletefolder' 'as' name=STRING 'folder' foldersource=STRING 'zipfile' zipsource=STRING
	'{'
	value=SelectStatement
	'}' 'on-condition' condition=Expression;

Terminal:
	'terminal' 'as' name=STRING 'id' id=STRING 'using'
	'{'
	value=STRING
	'}' 'on-condition' condition=Expression;

ExecJava:
	"java" 'as' name=STRING 'using' classFqn=STRING 'name-sake-db' dbSrc=STRING
	'{'
	value=STRING
	'}' 'on-condition' condition=Expression;

Abort:
	'abort' 'as' name=STRING
	'{'
	value=STRING
	'}' 'on-condition' condition=Expression;

Dropfile:
	'dropfile' 'as' name=STRING 'in-path' target=STRING 'on-condition' condition=Expression;

Doozle:
	'doozle' 'as' name=STRING 'in-table' target=STRING 'on' on=STRING 'using'
	'{'
	value=CreateStatement
	'}' 'on-condition' condition=Expression;

Fetch:
	'assign' 'as' name=STRING 'source' source=STRING 'using'
	'{'
	value=STRING
	'}' 'on-condition' condition=Expression;

Callprocess:
	'callprocess' 'as' name=STRING 'with-target' target=STRING 'from-file' source=STRING 'using' datasource=STRING
	'for-every'
	'{'
	value=SelectStatement
	'}' 'on-condition' condition=Expression;

Copydata:
	'copydata' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'target' target=STRING 'by-batch' limit=STRING
	'using'
	'{'
	value=SelectStatement
	'}' 'on-condition' condition=Expression;

WriteCsv:
	'writecsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'using'
	'{'
	value=SelectStatement
	'}' 'on-condition' condition=Expression;

LoadCsv:
	'loadcsv' 'as' name=STRING 'from' source=STRING 'to' to=STRING 'with' delim=STRING 'by-batch' limit=STRING
	'dbschema'
	dbschema=STRING 'using'
	'{'
	value=SelectStatement
	'}' 'on-condition' condition=Expression;

Transform:
	'transform' 'as' name=STRING 'on' on=STRING 'using'
	'{'
	value+=NonSelectStatement
	'}' 'on-condition' condition=Expression;

Column:
	STRING;

SelectStatement:
	STRING;

NonSelectStatement:
	STRING;

CreateStatement:
	STRING;

Expression:
	'if' lhs=STRING operator=Operator rhs=STRING;

Operator:
	'<' | '>' | '==' | 'contains';
