package in.handyman.raven.lib;

import in.handyman.raven.core.context.ActionContext;
import in.handyman.raven.lambda.LambdaAutowire;
import in.handyman.raven.lambda.LambdaExecution;
import in.handyman.raven.lib.model.Process;
import java.lang.Exception;
import java.lang.Object;
import java.lang.Override;
import lombok.extern.log4j.Log4j2;
import org.apache.logging.log4j.MarkerManager;

/**
 * Auto Generated By Raven
 */
@LambdaAutowire(
    lambdaName = "Process"
)
@Log4j2
public class ProcessAction implements LambdaExecution {
  private final ActionContext actionContext;

  private final Process context;

  private final MarkerManager.Log4jMarker aMarker;

  public ProcessAction(final ActionContext actionContext, final Object context) {
    this.context = (Process) context;
    this.actionContext = actionContext;
    this.aMarker = new MarkerManager.Log4jMarker("Process");
    this.actionContext.getDetailMap().putPOJO("context", context);
  }

  @Override
  public void execute() throws Exception {
  }

  @Override
  public boolean executeIf() throws Exception {
    return false;
  }
}
