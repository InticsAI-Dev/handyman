/**
 * generated by Xtext 2.25.0
 */
package in.handyman.dsl.impl;

import in.handyman.dsl.DslPackage;
import in.handyman.dsl.SlackPUT;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Slack PUT</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link in.handyman.dsl.impl.SlackPUTImpl#getTeam <em>Team</em>}</li>
 *   <li>{@link in.handyman.dsl.impl.SlackPUTImpl#getChannel <em>Channel</em>}</li>
 *   <li>{@link in.handyman.dsl.impl.SlackPUTImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SlackPUTImpl extends ActionImpl implements SlackPUT {
    /**
     * The default value of the '{@link #getTeam() <em>Team</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     * @ordered
     * @see #getTeam()
     */
    protected static final String TEAM_EDEFAULT = null;
    /**
     * The default value of the '{@link #getChannel() <em>Channel</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     * @ordered
     * @see #getChannel()
     */
    protected static final String CHANNEL_EDEFAULT = null;
    /**
     * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     * @ordered
     * @see #getValue()
     */
    protected static final String VALUE_EDEFAULT = null;
    /**
     * The cached value of the '{@link #getTeam() <em>Team</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     * @ordered
     * @see #getTeam()
     */
    protected String team = TEAM_EDEFAULT;
    /**
     * The cached value of the '{@link #getChannel() <em>Channel</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     * @ordered
     * @see #getChannel()
     */
    protected String channel = CHANNEL_EDEFAULT;
    /**
     * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     * @ordered
     * @see #getValue()
     */
    protected String value = VALUE_EDEFAULT;

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    protected SlackPUTImpl() {
        super();
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    protected EClass eStaticClass() {
        return DslPackage.Literals.SLACK_PUT;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Object eGet(int featureID, boolean resolve, boolean coreType) {
        switch (featureID) {
            case DslPackage.SLACK_PUT__TEAM:
                return getTeam();
            case DslPackage.SLACK_PUT__CHANNEL:
                return getChannel();
            case DslPackage.SLACK_PUT__VALUE:
                return getValue();
        }
        return super.eGet(featureID, resolve, coreType);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public String getTeam() {
        return team;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void setTeam(String newTeam) {
        String oldTeam = team;
        team = newTeam;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SLACK_PUT__TEAM, oldTeam, team));
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public String getChannel() {
        return channel;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void setChannel(String newChannel) {
        String oldChannel = channel;
        channel = newChannel;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SLACK_PUT__CHANNEL, oldChannel, channel));
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public String getValue() {
        return value;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void setValue(String newValue) {
        String oldValue = value;
        value = newValue;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SLACK_PUT__VALUE, oldValue, value));
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void eSet(int featureID, Object newValue) {
        switch (featureID) {
            case DslPackage.SLACK_PUT__TEAM:
                setTeam((String) newValue);
                return;
            case DslPackage.SLACK_PUT__CHANNEL:
                setChannel((String) newValue);
                return;
            case DslPackage.SLACK_PUT__VALUE:
                setValue((String) newValue);
                return;
        }
        super.eSet(featureID, newValue);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void eUnset(int featureID) {
        switch (featureID) {
            case DslPackage.SLACK_PUT__TEAM:
                setTeam(TEAM_EDEFAULT);
                return;
            case DslPackage.SLACK_PUT__CHANNEL:
                setChannel(CHANNEL_EDEFAULT);
                return;
            case DslPackage.SLACK_PUT__VALUE:
                setValue(VALUE_EDEFAULT);
                return;
        }
        super.eUnset(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public boolean eIsSet(int featureID) {
        switch (featureID) {
            case DslPackage.SLACK_PUT__TEAM:
                return TEAM_EDEFAULT == null ? team != null : !TEAM_EDEFAULT.equals(team);
            case DslPackage.SLACK_PUT__CHANNEL:
                return CHANNEL_EDEFAULT == null ? channel != null : !CHANNEL_EDEFAULT.equals(channel);
            case DslPackage.SLACK_PUT__VALUE:
                return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
        }
        return super.eIsSet(featureID);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public String toString() {
        if (eIsProxy()) return super.toString();

        StringBuilder result = new StringBuilder(super.toString());
        result.append(" (team: ");
        result.append(team);
        result.append(", channel: ");
        result.append(channel);
        result.append(", value: ");
        result.append(value);
        result.append(')');
        return result.toString();
    }

} //SlackPUTImpl
