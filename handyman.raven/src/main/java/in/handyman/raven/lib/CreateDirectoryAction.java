package in.handyman.raven.lib;

import in.handyman.raven.lambda.action.ActionExecution;
import in.handyman.raven.lambda.action.IActionExecution;
import in.handyman.raven.lambda.doa.Action;
import in.handyman.raven.lib.model.CreateDirectory;
import java.lang.Exception;
import java.lang.Object;
import java.lang.Override;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.slf4j.Logger;
import org.slf4j.Marker;
import org.slf4j.MarkerFactory;

/**
 * Auto Generated By Raven
 */
@ActionExecution(
    actionName = "CreateDirectory"
)
public class CreateDirectoryAction implements IActionExecution {
  private final Action action;

  private final Logger log;

  private final CreateDirectory createDirectory;

  private final Marker aMarker;

  public CreateDirectoryAction(final Action action, final Logger log,
      final Object createDirectory) {
    this.createDirectory = (CreateDirectory) createDirectory;
    this.action = action;
    this.log = log;
    this.aMarker = MarkerFactory.getMarker("CreateDirectory");
  }

  @Override
  public void execute() throws Exception {
    //log.info("Directory creation operation has been started for listed files \n {}",createDirectory.getDirectoryPath());
    for (String fileName : createDirectory.getDirectoryPath()) {
      Path path = Paths.get(fileName);
      if(!Files.exists(path)) {
        Files.createDirectory(path);
        //log.info("{} Directory Created",path);
      } else {
        //log.info("{} Directory already exists",path);
      }
    }
  }

  @Override
  public boolean executeIf() throws Exception {
    return false;
  }
}
